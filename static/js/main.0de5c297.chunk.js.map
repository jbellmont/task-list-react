{"version":3,"sources":["components/SearchBar.js","components/SortTasks.js","components/OptionsMenu.js","components/TaskItem.js","components/TaskList.js","components/AddTask.js","components/App.js","index.js"],"names":["SearchBar","onSearchBarChange","e","props","target","value","className","type","placeholder","onChange","this","React","Component","SortTasks","id","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","onClick","console","log","onSortByDateClick","onSortByPriorityClick","onSortByTagClick","OptionsMenu","onShowAddTaskClick","TaskItem","taskName","index","dateDue","priority","tag","complete","onCompleteTaskButtonClick","deleted","onDeleteTaskButtonClick","onTaskNameUpdateChange","onDateUpdateChange","onPriorityUpdateChange","onTagUpdateChange","animateNoOfTasks","priorityButtonColour","completedBackgroundColor","backgroundColor","completedStrikeThrough","textDecoration","completedStrikeThroughTaskName","style","maxLength","role","TaskList","renderedTaskList","inputValue","tasks","filteredTasks","filter","item","map","task","key","AddTask","state","onFormSubmit","preventDefault","onAddTaskClick","setState","onSubmit","required","minLength","App","addTaskVisible","countNumberOfCurrentTasks","length","componentDidMount","appTitleDOM","document","querySelector","noOfTasksIconDOM","addEventListener","noOfTasksIcon","classList","add","setTimeout","remove","concat","sort","a","b","Date","tagA","toUpperCase","tagB","newTask","Object","assign","newDate","newPriority","newTag","toLowerCase","includes","onShowCompletedClick","ReactDOM","render"],"mappings":"yUAuBeA,E,4MAnBbC,kBAAoB,SAACC,GACnB,EAAKC,MAAMF,kBAAkBC,EAAEE,OAAOC,Q,uDAItC,OACE,8BACE,2BACEC,UAAU,eACVC,KAAK,OACLC,YAAY,cACZC,SAAUC,KAAKT,oBAEjB,uBAAGK,UAAU,qB,GAfGK,IAAMC,WCgCfC,G,MA/BG,SAACV,GAiBjB,OACE,yBAAKG,UAAU,YACb,4BAAQA,UAAU,oCAAoCC,KAAK,SAASO,GAAG,qBAAqBC,cAAY,WAAWC,gBAAc,OAAOC,gBAAc,SAAtJ,iBAGA,yBAAKX,UAAU,gBAAgBY,kBAAgB,sBAC7C,yBAAKZ,UAAU,0BAA0Ba,QArBrB,WACxBC,QAAQC,IAAI,iBACZlB,EAAMmB,sBAmBF,YACA,yBAAKhB,UAAU,0BAA0Ba,QAjBjB,WAC5BC,QAAQC,IAAI,qBACZlB,EAAMoB,0BAeF,YACA,yBAAKjB,UAAU,0BAA0Ba,QAbtB,WACvBC,QAAQC,IAAI,gBACZlB,EAAMqB,qBAWF,WCSOC,G,MAhCK,SAACtB,GAMnB,OACE,yBAAKG,UAAU,gCAEb,yBAAKA,UAAU,UACb,kBAAC,EAAD,CAAWL,kBAAmBE,EAAMF,qBAGtC,yBAAKK,UAAU,uBACb,4BAAQA,UAAU,kCAAkCa,QAZ/B,WACzBhB,EAAMuB,uBAWF,eAMF,yBAAKpB,UAAU,kBACb,kBAAC,EAAD,CACEgB,kBAAmBnB,EAAMmB,kBACzBC,sBAAuBpB,EAAMoB,sBAC7BC,iBAAkBrB,EAAMqB,uBC4FnBG,G,MAtHE,SAAC,GAAoO,IAAlOC,EAAiO,EAAjOA,SAAUC,EAAuN,EAAvNA,MAAOC,EAAgN,EAAhNA,QAASC,EAAuM,EAAvMA,SAAUC,EAA6L,EAA7LA,IAAKC,EAAwL,EAAxLA,SAAmBC,GAAqK,EAA9KC,QAA8K,EAArKD,2BAA2BpB,EAA0I,EAA1IA,GAAIsB,EAAsI,EAAtIA,wBAAyBC,EAA6G,EAA7GA,uBAAwBC,EAAqF,EAArFA,mBAAoBC,EAAiE,EAAjEA,uBAAwBC,EAAyC,EAAzCA,kBAAmBC,EAAsB,EAAtBA,iBAsCvNC,EACU,SAAbX,EAAuB,SACR,WAAbA,EAAyB,UAC1B,UAEEY,EACHV,EAAY,CAAEW,gBAAiB,aAAgB,GAE5CC,EACHZ,EAAY,CAAEa,eAAgB,gBAAkB,GAE7CC,EACHd,EAAY,CAAEa,eAAgB,eAAgBF,gBAAiB,WAAc,GAGhF,OACE,yBAAKtC,UAAU,wCAAwC0C,MAAOL,GAE5D,yBAAKrC,UAAU,6BAA6B0C,MAAOH,GACjD,0BAAMvC,UAAU,oCAAoC0C,MAAOH,GAA3D,IAAqFhB,IAGvF,yBAAKvB,UAAU,iDACb,2BACEC,KAAK,OACLF,MAAOuB,EACPqB,UAAU,KACV3C,UAAU,YACV0C,MAAOD,EACPtC,SA/D+B,SAACP,GAEtCmC,EAAuBvB,EAAIZ,EAAEE,OAAOC,WAmEhC,yBAAKC,UAAU,kCAEb,2BACEC,KAAK,OACLF,MAAOyB,EACPrB,SArEyB,SAACP,GAElCoC,EAAmBxB,EAAIZ,EAAEE,OAAOC,QAoExBC,UAAU,kDAMZ,4BACED,MAAO0B,EACPtB,SAzE6B,SAACP,GAEtCqC,EAAuBzB,EAAIZ,EAAEE,OAAOC,QAwE5BC,UAAS,kBAAaoC,EAAb,0BAET,uCACA,0CACA,yCAMF,2BACEnC,KAAK,OACLF,MAAO2B,EACPiB,UAAU,KACV3C,UAAU,oCACVG,SApFwB,SAACP,GAEjCsC,EAAkB1B,EAAIZ,EAAEE,OAAOC,WAsF3B,yBAAKC,UAAU,gCACb,yBAAKA,UAAU,YAAY4C,KAAK,SAC9B,4BAAQ3C,KAAK,SAASD,UAAU,2CAA2Ca,QAlF3C,WAExCe,EAA0BpB,GAC1B2B,MA+EQ,UACA,4BAAQlC,KAAK,SAASD,UAAU,2CAA2Ca,QA7E7C,WAEvCiB,EAAwBtB,KA2Ef,eCnEGqC,G,MA1CE,SAAChD,GAGhB,IAIMiD,GAJsC,KAArBjD,EAAMkD,WAAqBlD,EAAMmD,MAAQnD,EAAMoD,eAEhCC,QAAO,SAAAC,GAAI,OAAKA,EAAKtB,WAElBuB,KAAI,SAACC,EAAM9B,GAClD,OAAK8B,EAAKxB,QAsBD,KApBL,kBAAC,EAAD,CACEP,SAAU+B,EAAK/B,SACfE,QAAS6B,EAAK7B,QACdC,SAAU4B,EAAK5B,SACfC,IAAK2B,EAAK3B,IACVC,SAAU0B,EAAK1B,SACfE,QAASwB,EAAKxB,QACdyB,IAAKD,EAAK7C,GACVA,GAAI6C,EAAK7C,GACTe,MAAOA,EAAQ,EACfQ,uBAAwBlC,EAAMkC,uBAC9BC,mBAAoBnC,EAAMmC,mBAC1BC,uBAAwBpC,EAAMoC,uBAC9BC,kBAAmBrC,EAAMqC,kBACzBN,0BAA2B/B,EAAM+B,0BACjCE,wBAAyBjC,EAAMiC,wBAC/BK,iBAAkBtC,EAAMsC,sBAShC,OACE,yBAAKnC,UAAU,2BACZ8C,KCiDQS,G,kNAtFbC,MAAQ,CACNhD,GAAI,EACJc,SAAU,GACVE,QAAS,GACTC,SAAU,MACVC,IAAK,GACLC,UAAU,EACVE,SAAS,G,EAGX4B,aAAe,SAAC7D,GAAQA,EAAE8D,kB,EAE1BC,eAAiB,SAAC/D,GACX,EAAK4D,MAAMlC,UAAa,EAAKkC,MAAMhC,SAAY,EAAKgC,MAAM9B,MAG/D,EAAKkC,SAAS,CAAEpD,GAAI,EAAKgD,MAAMhD,GAAK,IACpC,EAAKX,MAAM8D,eAAe,EAAKH,OAC/B,EAAK3D,MAAMsC,qB,uDAGF,IAAD,OACR,OACE,yBAAKnC,UAAU,gBACb,yBAAKA,UAAU,OAEf,wBAAIA,UAAU,IAAd,sBAEE,0BAAM6D,SAAUzD,KAAKqD,cACnB,4CACI,6BACA,2BACExD,KAAK,OACL6D,UAAQ,EACRC,UAAU,IACVpB,UAAU,KACV3C,UAAU,eACVG,SAAW,SAACP,GAAD,OAAO,EAAKgE,SAAS,CAAEtC,SAAU1B,EAAEE,OAAOC,YAG3D,6BAEA,2CACI,6BACA,2BAAOE,KAAK,OAAO6D,UAAQ,EAAC9D,UAAU,eAAeG,SAAW,SAACP,GAAD,OAAO,EAAKgE,SAAS,CAAEpC,QAAS5B,EAAEE,OAAOC,YAG7G,6BAEA,2CACE,6BACA,4BAAQC,UAAU,eAAe8D,UAAQ,EAAC3D,SAAW,SAACP,GAAD,OAAO,EAAKgE,SAAS,CAAEnC,SAAU7B,EAAEE,OAAOC,UAC7F,uCACA,0CACA,0CAIJ,6BAEA,sCACE,6BACA,yBAAKC,UAAU,IACb,2BACEC,KAAK,OACL6D,UAAQ,EACRC,UAAU,IACVpB,UAAU,KACV3C,UAAU,eACVG,SAAW,SAACP,GAAD,OAAO,EAAKgE,SAAS,CAAElC,IAAK9B,EAAEE,OAAOC,aAItD,6BAEA,4BAAQE,KAAK,SAASD,UAAU,kBAAkBa,QAAST,KAAKuD,gBAAhE,mB,GA5EUtD,IAAMC,YC+Sb0D,G,kNA3SbR,MAAQ,CACNR,MAAO,CACL,CACExC,GAAI,EACJc,SAAU,mBACVE,QAAS,aACTC,SAAU,OACVC,IAAK,YACLC,UAAU,EACVE,SAAS,GAEX,CACErB,GAAI,EACJc,SAAU,gCACVE,QAAS,aACTC,SAAU,MACVC,IAAK,YACLC,UAAU,EACVE,SAAS,GAEX,CACErB,GAAI,EACJc,SAAU,wBACVE,QAAS,aACTC,SAAU,SACVC,IAAK,aACLC,UAAU,EACVE,SAAS,IAGboC,gBAAgB,EAChBlB,WAAY,I,EAGdmB,0BAA4B,WAU1B,OARgC,EAAKV,MAAMR,MAAME,QAAO,SAAAG,GACtD,OAAIA,EAAK1B,WAAY0B,EAAKxB,WAOGsC,Q,EAQjCC,kBAAoB,WAElB,IAAMC,EAAcC,SAASC,cAAc,MACrCC,EAAmBF,SAASC,cAAc,gBAChDF,EAAYI,iBAAiB,aAAa,SAAC7E,GAAD,OAAOA,EAAE8D,oBACnDc,EAAiBC,iBAAiB,aAAa,SAAC7E,GAAD,OAAOA,EAAE8D,qB,EAG1DvB,iBAAmB,WAEjB,IAAMuC,EAAgBJ,SAASC,cAAc,gBAC7CG,EAAcC,UAAUC,IAAI,uBAC5BC,YAAW,WACTH,EAAcC,UAAUG,OAAO,yBAE9B,M,EAQL1D,mBAAqB,WAEnB,EAAKoC,MAAMS,eAAiB,EAAKL,SAAS,CAAEK,gBAAgB,IAAW,EAAKL,SAAS,CAAEK,gBAAgB,K,EAGzGN,eAAiB,SAACN,GAEhB,EAAKO,UAAS,SAAAJ,GAEZ,MAAO,CAAER,MADeQ,EAAMR,MAAM+B,OAAO1B,Q,EAK/C1D,kBAAoB,SAAC0D,GAAD,OAAU,EAAKO,SAAU,CAACb,WAAYM,K,EAG1DrC,kBAAoB,WAElB,EAAK4C,UAAS,SAAAJ,GAIZ,OAHuBA,EAAMR,MAAMgC,MAAK,SAACC,EAAEC,GACzC,OAAO,IAAIC,KAAKF,EAAEzD,SAAW,IAAI2D,KAAKD,EAAE1D,gB,EAM9CP,sBAAwB,WAEtB,EAAK2C,UAAS,SAAAJ,GA0BZ,OAzBuBA,EAAMR,MAAMgC,MAAK,SAACC,EAAEC,GAEzC,MAAmB,SAAfD,EAAExD,UAAsC,WAAfyD,EAAEzD,UAEL,SAAfwD,EAAExD,UAAsC,QAAfyD,EAAEzD,UAEZ,WAAfwD,EAAExD,UAAwC,QAAfyD,EAAEzD,UAH9B,EAKgB,WAAfwD,EAAExD,UAAwC,WAAfyD,EAAEzD,UAEd,SAAfwD,EAAExD,UAAsC,SAAfyD,EAAEzD,UAEZ,QAAfwD,EAAExD,UAAqC,QAAfyD,EAAEzD,SAH5B,EAKiB,WAAfwD,EAAExD,UAAwC,SAAfyD,EAAEzD,UAEd,QAAfwD,EAAExD,UAAqC,WAAfyD,EAAEzD,UAEX,QAAfwD,EAAExD,UAAqC,SAAfyD,EAAEzD,SAH5B,EAMA,S,EAQfP,iBAAmB,WAEjB,EAAK0C,UAAS,SAAAJ,GAeZ,OAduBA,EAAMR,MAAMgC,MAAK,SAACC,EAAEC,GACzC,IAAIE,EAAOH,EAAEvD,IAAI2D,cACbC,EAAOJ,EAAExD,IAAI2D,cAEjB,OAAID,EAAOE,GACD,EACCF,EAAOE,EACT,EAEA,S,EAgBfvD,uBAAyB,SAACvB,EAAI+E,GAC5B,EAAK3B,UAAS,SAAAJ,GAQZ,MAAO,CAAER,MAPeQ,EAAMR,MAAMI,KAAI,SAACC,GACvC,OAAIA,EAAK7C,KAAOA,EACPgF,OAAOC,OAAO,GAAIpC,EAAM,CAAC/B,SAAUiE,IAEnClC,U,EAOfrB,mBAAqB,SAACxB,EAAIkF,GACxB,EAAK9B,UAAS,SAAAJ,GAQZ,MAAO,CAAER,MAPeQ,EAAMR,MAAMI,KAAI,SAACC,GACvC,OAAIA,EAAK7C,KAAOA,EACPgF,OAAOC,OAAO,GAAIpC,EAAM,CAAC7B,QAASkE,IAElCrC,U,EAOfpB,uBAAyB,SAACzB,EAAImF,GAC5B,EAAK/B,UAAS,SAAAJ,GAQZ,MAAO,CAAER,MAPeQ,EAAMR,MAAMI,KAAI,SAACC,GACvC,OAAIA,EAAK7C,KAAOA,EACPgF,OAAOC,OAAO,GAAIpC,EAAM,CAAC5B,SAAUkE,IAEnCtC,U,EAOfnB,kBAAoB,SAAC1B,EAAIoF,GACvB,EAAKhC,UAAS,SAAAJ,GAQZ,MAAO,CAAER,MAPeQ,EAAMR,MAAMI,KAAI,SAACC,GACvC,OAAIA,EAAK7C,KAAOA,EACPgF,OAAOC,OAAO,GAAIpC,EAAM,CAAC3B,IAAKkE,IAE9BvC,U,EAUfzB,0BAA4B,SAACpB,GAE3B,EAAKoD,UAAS,SAAAJ,GAQZ,MAAO,CAAER,MAPeQ,EAAMR,MAAMI,KAAI,SAACC,GACvC,OAAIA,EAAK7C,KAAOA,EACPgF,OAAOC,OAAO,GAAIpC,EAAM,CAAC1B,UAAU,IAEnC0B,U,EAOfvB,wBAA0B,SAACtB,GAEzB,EAAKoD,UAAS,SAAAJ,GAQZ,MAAO,CAAER,MAPeQ,EAAMR,MAAMI,KAAI,SAACC,GACvC,OAAIA,EAAK7C,KAAOA,EACPgF,OAAOC,OAAO,GAAIpC,EAAM,CAACxB,SAAS,IAElCwB,U,uDAYL,IAAD,OAEDJ,EAEJ7C,KAAKoD,MAAMR,MAAME,QAAO,SAAAG,GACtB,OAAOA,EAAK/B,SAASuE,cAAcC,SAAS,EAAKtC,MAAMT,WAAW8C,kBAGtE,OACE,yBAAK7F,UAAU,qCAEb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,OACb,4BAAI,uBAAGA,UAAU,2BAAjB,YAAuD,6BAAK,0BAAMA,UAAU,8CAA8CI,KAAK8D,iCAIjI,kBAAC,EAAD,CACE9C,mBAAoBhB,KAAKgB,mBACzB2E,qBAAsB3F,KAAK2F,qBAC3BpG,kBAAmBS,KAAKT,kBACxBqB,kBAAmBZ,KAAKY,kBACxBC,sBAAuBb,KAAKa,sBAC5BC,iBAAkBd,KAAKc,mBAGzBd,KAAKoD,MAAMS,eAAiB,kBAAC,EAAD,CAASN,eAAgBvD,KAAKuD,eAAgBxB,iBAAkB/B,KAAK+B,mBAAuB,KAE1H,yBAAKnC,UAAU,OACb,yBAAKA,UAAU,2BACb,kBAAC,EAAD,CACEgD,MAAO5C,KAAKoD,MAAMR,MAClBC,cAAeA,EACfF,WAAY3C,KAAKoD,MAAMT,WACvBhB,uBAAwB3B,KAAK2B,uBAC7BC,mBAAoB5B,KAAK4B,mBACzBC,uBAAwB7B,KAAK6B,uBAC7BC,kBAAmB9B,KAAK8B,kBACxBN,0BAA2BxB,KAAKwB,0BAChCE,wBAAyB1B,KAAK0B,wBAC9BK,iBAAkB/B,KAAK+B,0B,GAlSnB9B,IAAMC,YCFxB0F,IAASC,OAAO,kBAAC,EAAD,MAAS3B,SAASC,cAAc,Y","file":"static/js/main.0de5c297.chunk.js","sourcesContent":["import React from 'react';\n\nclass SearchBar extends React.Component {\n\n  onSearchBarChange = (e) => {\n    this.props.onSearchBarChange(e.target.value);\n  }\n\n  render() {\n    return (\n      <form>\n        <input \n          className=\"form-control\" \n          type=\"text\" \n          placeholder=\"Search task\" \n          onChange={this.onSearchBarChange} \n        />\n        <i className=\"search icon\"></i>\n    </form>\n    );\n  }\n}\n\nexport default SearchBar;","import React from 'react';\nimport './SortTasks.css';\n\nconst SortTasks = (props) => {\n\n  const onSortByDateClick = () => {\n    console.log('sort by date!');\n    props.onSortByDateClick();\n  }\n\n  const onSortByPriorityClick = () => {\n    console.log('sort by priority!');\n    props.onSortByPriorityClick();\n  }\n\n  const onSortByTagClick = () => {\n    console.log('sort by tag!');\n    props.onSortByTagClick();\n  }\n\n  return (\n    <div className=\"dropdown\">\n      <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n        Sort tasks by\n      </button>\n      <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n        <div className=\"dropdown-item sort-item\" onClick={onSortByDateClick}>Due date</div>\n        <div className=\"dropdown-item sort-item\" onClick={onSortByPriorityClick}>Priority</div>\n        <div className=\"dropdown-item sort-item\" onClick={onSortByTagClick}>Tag</div>\n      </div>\n    </div>\n  );\n}\n\nexport default SortTasks;","import React from 'react';\nimport SearchBar from './SearchBar';\nimport SortTasks from './SortTasks';\nimport './OptionsMenu.css'\n\nconst OptionsMenu = (props) => {\n\n  const onShowAddTaskClick = () => {\n    props.onShowAddTaskClick();\n  };\n\n  return (\n    <div className=\"row text-center options-menu\">\n\n      <div className='col-sm'>\n        <SearchBar onSearchBarChange={props.onSearchBarChange} />\n      </div>\n\n      <div className='col add-task-column'>\n        <button className=\"btn btn-primary add-task-button\" onClick={onShowAddTaskClick}>\n          + Add task\n        </button>\n        \n      </div>\n\n      <div className='col text-right'>\n        <SortTasks \n          onSortByDateClick={props.onSortByDateClick} \n          onSortByPriorityClick={props.onSortByPriorityClick}\n          onSortByTagClick={props.onSortByTagClick}\n      />\n      </div>\n\n    </div>\n  );\n}\n\nexport default OptionsMenu;","import React from 'react';\nimport './TaskItem.css';\n\nconst TaskItem = ({ taskName, index, dateDue, priority, tag, complete, deleted, onCompleteTaskButtonClick, id, onDeleteTaskButtonClick, onTaskNameUpdateChange, onDateUpdateChange, onPriorityUpdateChange, onTagUpdateChange, animateNoOfTasks}) => {\n\n  // Editing existing task callbacks\n\n  const onTaskNameUpdateChangeCallBack = (e) => {\n    // Updates state of Task Name when a user edits a task item Task Name\n    onTaskNameUpdateChange(id, e.target.value);\n  }\n\n  const onDateUpdateChangeCallBack = (e) => {\n    // Updates state of Task Name when a user edits a task item Task Name\n    onDateUpdateChange(id, e.target.value);\n  }\n\n  const onPriorityUpdateChangeCallBack = (e) => {\n    // Updates state of Task Name when a user edits a task item Task Name\n    onPriorityUpdateChange(id, e.target.value);\n  }\n\n  const onTagUpdateChangeCallBack = (e) => {\n    // Updates state of Task Name when a user edits a task item Task Name\n    onTagUpdateChange(id, e.target.value);\n  }\n\n\n  // Complete and delete callbacks\n\n  const onCompleteTaskButtonClickCallBack = () => {\n    // Sends the ID of current component up to the App\n    onCompleteTaskButtonClick(id);\n    animateNoOfTasks();\n  };\n\n  const onDeleteTaskButtonClickCallBack = () => {\n   // Sends the ID of current component up to the App\n   onDeleteTaskButtonClick(id);\n  };\n\n  const priorityButtonColour = \n    (priority === 'High') ? \"danger\"\n    : (priority === 'Medium') ? \"warning\"\n    : \"success\";\n\n  const completedBackgroundColor = \n    (complete) ? { backgroundColor: \"#52525241\" } : { };\n\n  const completedStrikeThrough = \n    (complete) ? { textDecoration: \"line-through\"} : { };\n\n  const completedStrikeThroughTaskName = \n    (complete) ? { textDecoration: \"line-through\", backgroundColor: \"#D3D3D3\" } : { };\n\n\n  return (\n    <div className=\"row task-item align-middle no-gutters\" style={completedBackgroundColor}>\n\n      <div className=\"col-md-1 id-column padding\" style={completedStrikeThrough}>\n        <span className=\"badge badge-pill badge-warning id\" style={completedStrikeThrough}>#{index}</span>\n      </div>\n\n      <div className=\"col-md-3 task-name-column text-center padding\">\n        <input \n          type=\"text\" \n          value={taskName} \n          maxLength=\"25\"\n          className=\"task-name\"\n          style={completedStrikeThroughTaskName}\n          onChange={onTaskNameUpdateChangeCallBack}\n        />\n      </div>\n\n      {/* column 5 */}\n        {/* <div className=\"col-md-3 text-center padding\"> */}\n        <div className=\"col-md-7 middle-column padding\">\n          {/* Date button */}\n          <input \n            type=\"date\"\n            value={dateDue}\n            onChange={onDateUpdateChangeCallBack}\n            className=\"btn btn-info btn-sm middle-button date-button\"\n          />\n        {/* </div> */}\n\n        {/* Priority button*/}  \n        {/* <div className=\"col-md-2 text-center padding\"> */}\n          <select \n            value={priority}\n            onChange={onPriorityUpdateChangeCallBack}\n            className={`btn btn-${priorityButtonColour} btn-sm middle-button`}\n          >\n            <option>Low</option>\n            <option>Medium</option>\n            <option>High</option>\n          </select>\n        {/* </div> */}\n\n        {/* <div className=\"col-md-2 text-center padding\"> */}\n          {/* Tag button */}\n          <input \n            type=\"text\" \n            value={tag} \n            maxLength=\"15\"\n            className=\"btn btn-dark btn-sm middle-button\"\n            onChange={onTagUpdateChangeCallBack}\n          />\n        </div>\n\n        <div className=\"col-md-1 text-center padding\">\n          <div className=\"btn-group\" role=\"group\">\n            <button type=\"button\" className=\"btn btn-secondary complete-delete btn-sm\" onClick={onCompleteTaskButtonClickCallBack}>✓</button>\n            <button type=\"button\" className=\"btn btn-secondary complete-delete btn-sm\" onClick={onDeleteTaskButtonClickCallBack}>✗</button>\n          </div>\n        </div>\n\n    </div>\n  );\n}\n\nexport default TaskItem;","import React from 'react';\nimport TaskItem from './TaskItem';\nimport './TaskList.css';\n\nconst TaskList = (props) => {\n\n  // \n  const taskListToUse = (props.inputValue === \"\") ? props.tasks : props.filteredTasks;\n\n  const notDeletedTasks = taskListToUse.filter(item => !item.deleted);\n\n  const renderedTaskList = notDeletedTasks.map((task, index) => {\n    if (!task.deleted) {\n      return (\n        <TaskItem \n          taskName={task.taskName}\n          dateDue={task.dateDue}\n          priority={task.priority}\n          tag={task.tag}\n          complete={task.complete}\n          deleted={task.deleted}\n          key={task.id}\n          id={task.id}\n          index={index + 1}\n          onTaskNameUpdateChange={props.onTaskNameUpdateChange}\n          onDateUpdateChange={props.onDateUpdateChange}\n          onPriorityUpdateChange={props.onPriorityUpdateChange}\n          onTagUpdateChange={props.onTagUpdateChange}\n          onCompleteTaskButtonClick={props.onCompleteTaskButtonClick}\n          onDeleteTaskButtonClick={props.onDeleteTaskButtonClick}\n          animateNoOfTasks={props.animateNoOfTasks}\n        />\n      );\n    } else {\n      return null;\n    }\n  });\n\n  // Component render\n  return (\n    <div className=\"row task-list-container\">\n      {renderedTaskList}\n    </div>\n  );\n}\n\nexport default TaskList;","import React from 'react';\nimport './AddTask.css';\n\nclass AddTask extends React.Component {\n  state = {\n    id: 4,\n    taskName: \"\",\n    dateDue: \"\",\n    priority: \"Low\",\n    tag: \"\",\n    complete: false,\n    deleted: false,\n  }\n\n  onFormSubmit = (e) => { e.preventDefault() };\n\n  onAddTaskClick = (e) => {\n    if (!this.state.taskName || !this.state.dateDue || !this.state.tag) {\n      return;\n    }\n    this.setState({ id: this.state.id + 1 });\n    this.props.onAddTaskClick(this.state);\n    this.props.animateNoOfTasks();\n  }\n \n  render () {\n    return (\n      <div className=\"row add-task\">\n        <div className=\"col\">\n\n        <h4 className=\"\">Enter task details</h4>\n              \n          <form onSubmit={this.onFormSubmit}>\n            <label>Task name: \n                <br />\n                <input \n                  type=\"text\" \n                  required \n                  minLength=\"1\"\n                  maxLength=\"25\"\n                  className=\"form-control\" \n                  onChange={ (e) => this.setState({ taskName: e.target.value}) }/>\n            </label>\n\n            <br />\n\n            <label>Date due: \n                <br />\n                <input type=\"date\" required className=\"form-control\" onChange={ (e) => this.setState({ dateDue: e.target.value}) } />\n            </label>\n\n            <br />\n\n            <label>Priority: \n              <br />\n              <select className=\"form-control\" required onChange={ (e) => this.setState({ priority: e.target.value}) }>\n                <option>Low</option>\n                <option>Medium</option>\n                <option>High</option>\n              </select>\n            </label>\n\n            <br />\n\n            <label>Tag: \n              <br />\n              <div className=\"\">\n                <input \n                  type=\"text\" \n                  required \n                  minLength=\"1\"\n                  maxLength=\"15\"\n                  className=\"form-control\" \n                  onChange={ (e) => this.setState({ tag: e.target.value}) }/>\n              </div>\n            </label>\n\n            <br />\n\n            <button type=\"submit\" className=\"btn btn-primary\" onClick={this.onAddTaskClick}>\n              Add task\n            </button>\n\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddTask;","import React from 'react';\nimport OptionsMenu from './OptionsMenu';\nimport TaskList from './TaskList';\nimport AddTask from './AddTask';\nimport './App.css';\n\nclass App extends React.Component {\n  state = { \n    tasks: [\n      {\n        id: 1,\n        taskName: \"Marketing report\",\n        dateDue: \"2020-10-01\",\n        priority: \"High\",\n        tag: \"marketing\",\n        complete: false,\n        deleted: false,\n      },\n      {\n        id: 2,\n        taskName: \"Organise meeting with vendors\",\n        dateDue: \"2020-11-29\",\n        priority: \"Low\",\n        tag: \"logistics\",  \n        complete: false,\n        deleted: false,      \n      },\n      {\n        id: 3,\n        taskName: \"Meet James for coffee\",\n        dateDue: \"2020-12-01\",\n        priority: \"Medium\",\n        tag: \"networking\",  \n        complete: false,\n        deleted: false,      \n      },\n    ],\n    addTaskVisible: false,\n    inputValue: \"\",\n  };\n\n  countNumberOfCurrentTasks = () => {\n    // counts the number of active tasks and uses it to display number by H1 heading\n    const completedOrDeletedTasks = this.state.tasks.filter(task => {\n      if (task.complete || task.deleted) {\n        return false;\n      } else {\n        return true;\n      }\n    });\n\n    return completedOrDeletedTasks.length;\n  }\n\n\n    //********************* //\n   // Title methods        //\n  // ******************** //\n\n  componentDidMount = () => {\n    // Stops default text highlighting\n    const appTitleDOM = document.querySelector('h1');\n    const noOfTasksIconDOM = document.querySelector('.no-of-tasks');\n    appTitleDOM.addEventListener('mousedown', (e) => e.preventDefault());\n    noOfTasksIconDOM.addEventListener('mousedown', (e) => e.preventDefault());\n  }\n\n  animateNoOfTasks = () => {\n    // Adds/removes a class for the popping animation\n    const noOfTasksIcon = document.querySelector('.no-of-tasks');\n    noOfTasksIcon.classList.add('animate-no-of-tasks');\n    setTimeout(() => {\n      noOfTasksIcon.classList.remove('animate-no-of-tasks');\n      // popFX.pause();\n    }, 500);\n  }\n\n\n    //********************* //\n   // Options Menu methods //\n  // ******************** //\n\n  onShowAddTaskClick = () => {\n    // Makes the Add Task component visible\n    this.state.addTaskVisible ? this.setState({ addTaskVisible: false }) : this.setState({ addTaskVisible: true });\n  }\n\n  onAddTaskClick = (task) => {\n    // Callback for when user adds a task in the AddTask component\n    this.setState(state => {\n      const updatedTaskList = state.tasks.concat(task);\n      return { tasks: updatedTaskList };\n    });\n  }\n\n  onSearchBarChange = (task) => this.setState( {inputValue: task} );\n  // Updates search bar value in App state\n\n  onSortByDateClick = () => {\n    // Sorts task list by date, with most urgent first\n    this.setState(state => {\n      const sortedTaskList = state.tasks.sort((a,b) => {\n        return new Date(a.dateDue) - new Date(b.dateDue);\n      });\n      return sortedTaskList;\n    });\n  }\n\n  onSortByPriorityClick = () => {\n    // Sorts task list by priority, by High->Medium->Low descending order \n    this.setState(state => {\n      const sortedTaskList = state.tasks.sort((a,b) => {\n\n        if (a.priority === \"High\" && b.priority === \"Medium\") {\n          return -1;\n        } else if (a.priority === \"High\" && b.priority === \"Low\") {\n          return -1;\n        } else if (a.priority === \"Medium\" && b.priority === \"Low\") {\n          return -1;\n        } else if (a.priority === \"Medium\" && b.priority === \"Medium\") {\n          return 0;\n        } else if (a.priority === \"High\" && b.priority === \"High\") {\n          return 0;\n        } else if (a.priority === \"Low\" && b.priority === \"Low\") {\n          return 0;\n        } else if (a.priority === \"Medium\" && b.priority === \"High\") {\n          return 1;\n        } else if (a.priority === \"Low\" && b.priority === \"Medium\") {\n          return 1;\n        } else if (a.priority === \"Low\" && b.priority === \"High\") {\n          return 1;\n        } else {\n          return 0;\n        }\n\n      });\n      return sortedTaskList;\n    });\n  }\n\n  onSortByTagClick = () => {\n    // Sorts task list by date, with most urgent first\n    this.setState(state => {\n      const sortedTaskList = state.tasks.sort((a,b) => {\n        let tagA = a.tag.toUpperCase(); // ignore upper and lowercase\n        let tagB = b.tag.toUpperCase(); // ignore upper and lowercase\n\n        if (tagA < tagB) {\n          return -1;\n        } else if (tagA > tagB) {\n          return 1;\n        } else {\n          return 0;\n        }\n\n      });\n      \n      return sortedTaskList;\n    });\n  }\n\n  \n    //******************//\n   // TaskItem methods //\n  // **************** //\n\n  // Editing task detail methods \n\n  onTaskNameUpdateChange = (id, newTask) => {\n    this.setState(state => {\n      const updatedTaskList = state.tasks.map((task) => {\n        if (task.id === id) {\n          return Object.assign({}, task, {taskName: newTask});\n        } else {\n          return task;\n        }\n      });\n      return { tasks: updatedTaskList };\n    });\n  }\n\n  onDateUpdateChange = (id, newDate) => {\n    this.setState(state => {\n      const updatedTaskList = state.tasks.map((task) => {\n        if (task.id === id) {\n          return Object.assign({}, task, {dateDue: newDate});\n        } else {\n          return task;\n        }\n      });\n      return { tasks: updatedTaskList };\n    });\n  }\n\n  onPriorityUpdateChange = (id, newPriority) => {\n    this.setState(state => {\n      const updatedTaskList = state.tasks.map((task) => {\n        if (task.id === id) {\n          return Object.assign({}, task, {priority: newPriority});\n        } else {\n          return task;\n        }\n      });\n      return { tasks: updatedTaskList };\n    });\n  }\n\n  onTagUpdateChange = (id, newTag) => {\n    this.setState(state => {\n      const updatedTaskList = state.tasks.map((task) => {\n        if (task.id === id) {\n          return Object.assign({}, task, {tag: newTag});\n        } else {\n          return task;\n        }\n      });\n      return { tasks: updatedTaskList };\n    });\n  }\n\n\n  // Completing and Deleting task methods \n\n  onCompleteTaskButtonClick = (id) => {\n    // Callback for when a user clicks on completed task button in the TaskItem component\n    this.setState(state => {\n      const updatedTaskList = state.tasks.map((task) => {\n        if (task.id === id) {\n          return Object.assign({}, task, {complete: true});\n        } else {\n          return task;\n        }\n      });\n      return { tasks: updatedTaskList };\n    })\n  }\n\n  onDeleteTaskButtonClick = (id) => {\n    // Callback for when a user clicks on delete task button in the TaskItem component\n    this.setState(state => {\n      const updatedTaskList = state.tasks.map((task) => {\n        if (task.id === id) {\n          return Object.assign({}, task, {deleted: true});\n        } else {\n          return task;\n        }\n      });\n      return { tasks: updatedTaskList };\n    })\n  }\n\n\n    //******************//\n   //  Render method   //\n  // **************** //\n\n  render() {\n\n    const filteredTasks = \n    // Creates a filtered array when Search Bar is in use\n      this.state.tasks.filter(task => {\n        return task.taskName.toLowerCase().includes(this.state.inputValue.toLowerCase());\n      });\n\n    return (\n      <div className=\"container-fluid container-padding\">\n\n        <div className=\"row\">\n          <div className=\"col\">\n            <h1><i className=\"fas fa-tasks task-icon\"></i>Task List<sup><span className=\"badge badge-pill badge-warning no-of-tasks\">{this.countNumberOfCurrentTasks()}</span></sup></h1>\n          </div>\n        </div>\n\n          <OptionsMenu \n            onShowAddTaskClick={this.onShowAddTaskClick}\n            onShowCompletedClick={this.onShowCompletedClick} \n            onSearchBarChange={this.onSearchBarChange}\n            onSortByDateClick={this.onSortByDateClick}\n            onSortByPriorityClick={this.onSortByPriorityClick}\n            onSortByTagClick={this.onSortByTagClick}\n          />\n\n        { this.state.addTaskVisible ? <AddTask onAddTaskClick={this.onAddTaskClick} animateNoOfTasks={this.animateNoOfTasks} /> : null }\n        \n        <div className=\"row\">\n          <div className=\"col task-list-container\">\n            <TaskList \n              tasks={this.state.tasks} \n              filteredTasks={filteredTasks}\n              inputValue={this.state.inputValue}\n              onTaskNameUpdateChange={this.onTaskNameUpdateChange}\n              onDateUpdateChange={this.onDateUpdateChange}\n              onPriorityUpdateChange={this.onPriorityUpdateChange}\n              onTagUpdateChange={this.onTagUpdateChange}\n              onCompleteTaskButtonClick={this.onCompleteTaskButtonClick}\n              onDeleteTaskButtonClick={this.onDeleteTaskButtonClick}\n              animateNoOfTasks={this.animateNoOfTasks}\n            />\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}